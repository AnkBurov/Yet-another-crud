/*
 * This file is generated by jOOQ.
*/
package io.github.crud.generated;


import io.github.crud.generated.tables.Dbupdate;
import io.github.crud.generated.tables.Funcrole;
import io.github.crud.generated.tables.Userinfo;
import io.github.crud.generated.tables.Userrole;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Yetanotherschema extends SchemaImpl {

    private static final long serialVersionUID = -1060208748;

    /**
     * The reference instance of <code>yetanotherschema</code>
     */
    public static final Yetanotherschema YETANOTHERSCHEMA = new Yetanotherschema();

    /**
     * The table <code>yetanotherschema.DBUPDATE</code>.
     */
    public final Dbupdate DBUPDATE = io.github.crud.generated.tables.Dbupdate.DBUPDATE;

    /**
     * The table <code>yetanotherschema.FUNCROLE</code>.
     */
    public final Funcrole FUNCROLE = io.github.crud.generated.tables.Funcrole.FUNCROLE;

    /**
     * The table <code>yetanotherschema.USERINFO</code>.
     */
    public final Userinfo USERINFO = io.github.crud.generated.tables.Userinfo.USERINFO;

    /**
     * The table <code>yetanotherschema.USERROLE</code>.
     */
    public final Userrole USERROLE = io.github.crud.generated.tables.Userrole.USERROLE;

    /**
     * No further instances allowed
     */
    private Yetanotherschema() {
        super("yetanotherschema", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Dbupdate.DBUPDATE,
            Funcrole.FUNCROLE,
            Userinfo.USERINFO,
            Userrole.USERROLE);
    }
}
