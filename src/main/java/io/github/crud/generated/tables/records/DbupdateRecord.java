/*
 * This file is generated by jOOQ.
*/
package io.github.crud.generated.tables.records;


import io.github.crud.generated.tables.Dbupdate;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbupdateRecord extends UpdatableRecordImpl<DbupdateRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 921576542;

    /**
     * Setter for <code>yetanotherschema.DBUPDATE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>yetanotherschema.DBUPDATE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>yetanotherschema.DBUPDATE.SCRIPTID</code>.
     */
    public void setScriptid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>yetanotherschema.DBUPDATE.SCRIPTID</code>.
     */
    public Integer getScriptid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>yetanotherschema.DBUPDATE.AUTHOR</code>.
     */
    public void setAuthor(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>yetanotherschema.DBUPDATE.AUTHOR</code>.
     */
    public String getAuthor() {
        return (String) get(2);
    }

    /**
     * Setter for <code>yetanotherschema.DBUPDATE.SCRIPTNAME</code>.
     */
    public void setScriptname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>yetanotherschema.DBUPDATE.SCRIPTNAME</code>.
     */
    public String getScriptname() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Dbupdate.DBUPDATE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Dbupdate.DBUPDATE.SCRIPTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Dbupdate.DBUPDATE.AUTHOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Dbupdate.DBUPDATE.SCRIPTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getScriptid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getScriptname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbupdateRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbupdateRecord value2(Integer value) {
        setScriptid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbupdateRecord value3(String value) {
        setAuthor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbupdateRecord value4(String value) {
        setScriptname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DbupdateRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DbupdateRecord
     */
    public DbupdateRecord() {
        super(Dbupdate.DBUPDATE);
    }

    /**
     * Create a detached, initialised DbupdateRecord
     */
    public DbupdateRecord(Integer id, Integer scriptid, String author, String scriptname) {
        super(Dbupdate.DBUPDATE);

        set(0, id);
        set(1, scriptid);
        set(2, author);
        set(3, scriptname);
    }
}
