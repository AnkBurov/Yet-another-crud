/*
 * This file is generated by jOOQ.
*/
package io.github.crud.generated.tables;


import io.github.crud.generated.Keys;
import io.github.crud.generated.Yetanotherschema;
import io.github.crud.generated.tables.records.UserinfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userinfo extends TableImpl<UserinfoRecord> {

    private static final long serialVersionUID = 1326323076;

    /**
     * The reference instance of <code>yetanotherschema.USERINFO</code>
     */
    public static final Userinfo USERINFO = new Userinfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserinfoRecord> getRecordType() {
        return UserinfoRecord.class;
    }

    /**
     * The column <code>yetanotherschema.USERINFO.ID</code>.
     */
    public final TableField<UserinfoRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>yetanotherschema.USERINFO.EMAIL</code>.
     */
    public final TableField<UserinfoRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>yetanotherschema.USERINFO.PASSWORD</code>.
     */
    public final TableField<UserinfoRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>yetanotherschema.USERINFO.LASTNAME</code>.
     */
    public final TableField<UserinfoRecord, String> LASTNAME = createField("LASTNAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>yetanotherschema.USERINFO.FIRSTNAME</code>.
     */
    public final TableField<UserinfoRecord, String> FIRSTNAME = createField("FIRSTNAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>yetanotherschema.USERINFO.SURNAME</code>.
     */
    public final TableField<UserinfoRecord, String> SURNAME = createField("SURNAME", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>yetanotherschema.USERINFO</code> table reference
     */
    public Userinfo() {
        this("USERINFO", null);
    }

    /**
     * Create an aliased <code>yetanotherschema.USERINFO</code> table reference
     */
    public Userinfo(String alias) {
        this(alias, USERINFO);
    }

    private Userinfo(String alias, Table<UserinfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userinfo(String alias, Table<UserinfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Yetanotherschema.YETANOTHERSCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserinfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USERINFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserinfoRecord> getPrimaryKey() {
        return Keys.KEY_USERINFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserinfoRecord>> getKeys() {
        return Arrays.<UniqueKey<UserinfoRecord>>asList(Keys.KEY_USERINFO_PRIMARY, Keys.KEY_USERINFO_EMAIL_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userinfo as(String alias) {
        return new Userinfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userinfo rename(String name) {
        return new Userinfo(name, null);
    }
}
